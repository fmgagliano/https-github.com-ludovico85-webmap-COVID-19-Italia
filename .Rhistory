#setwd("working directory")
library(RCurl)
library(ggplot2)
library(tidyr)
library(plotly)
library(reshape2)
source("custom_theme.R")
url2<-getURL("https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv")
regioni<-read.csv(text = url2, head = T)
regioni<-separate(data = regioni, col = data, into = c("data", "ora"), sep = "\\ ")
regioni$data<-as.Date(regioni$data)
regioni_dati<-regioni
regioni_dati<-split(regioni_dati, regioni_dati$data)
regioni_dati<-regioni_dati$`2020-03-14`
colnames(regioni_dati)[5]<-"DEN_REG"
asi_totali<-regioni_dati[, c(5, 16)]
deceduti<-regioni_dati[, c(5, 15)]
guariti<-regioni_dati[, c(5, 14)]
attualmente_positivi<-regioni_dati[, c(5, 12)]
### caricamento del file vettoriale delle regioni ###
regioni_geo<-readOGR("regioni.gpkg", "regioni")
library(rgdal)
### caricamento del file vettoriale delle regioni ###
regioni_geo<-readOGR("regioni.gpkg", "regioni")
library(sp)
regioni_geo_casi_totali<-sp::merge(regioni_geo, casi_totali, by='DEN_REG')
regioni_geo_deceduti<-sp::merge(regioni_geo, deceduti, by='DEN_REG')
regioni_geo_guariti<-sp::merge(regioni_geo, guariti, by='DEN_REG')
regioni_geo_positivi<-sp::merge(regioni_geo, attualmente_positivi, by='DEN_REG')
### formattazione per leaflet ###
regioni_geo_casi_totali@data$totale_casi<-as.character(regioni_geo_casi_totali@data$totale_casi)
regioni_geo_deceduti@data$deceduti<-as.character(regioni_geo_deceduti@data$deceduti)
regioni_geo_guariti@data$dimessi_guariti<-as.character(regioni_geo_guariti@data$dimessi_guariti)
regioni_geo_positivi@data$totale_attualmente_positivi<-as.character(regioni_geo_positivi@data$totale_attualmente_positivi)
### caricamento del file vettoriale delle regioni ###
regioni_geo<-readOGR("regioni.gpkg", "regioni")
### join tra il dato vettoriale e gli attributi ###
regioni_geo_casi_totali<-sp::merge(regioni_geo, casi_totali, by='DEN_REG')
regioni_geo_deceduti<-sp::merge(regioni_geo, deceduti, by='DEN_REG')
regioni_geo_guariti<-sp::merge(regioni_geo, guariti, by='DEN_REG')
### caricamento del file vettoriale delle regioni ###
regioni_geo<-readOGR("regioni.gpkg", "regioni")
### join tra il dato vettoriale e gli attributi ###
regioni_geo_casi_totali<-sp::merge(regioni_geo, casi_totali, by='DEN_REG')
casi_totali<-regioni_dati[, c(5, 16)]
deceduti<-regioni_dati[, c(5, 15)]
guariti<-regioni_dati[, c(5, 14)]
attualmente_positivi<-regioni_dati[, c(5, 12)]
### caricamento del file vettoriale delle regioni ###
regioni_geo<-readOGR("regioni.gpkg", "regioni")
### join tra il dato vettoriale e gli attributi ###
regioni_geo_casi_totali<-sp::merge(regioni_geo, casi_totali, by='DEN_REG')
regioni_geo_deceduti<-sp::merge(regioni_geo, deceduti, by='DEN_REG')
regioni_geo_guariti<-sp::merge(regioni_geo, guariti, by='DEN_REG')
regioni_geo_positivi<-sp::merge(regioni_geo, attualmente_positivi, by='DEN_REG')
### formattazione per leaflet ###
regioni_geo_casi_totali@data$totale_casi<-as.character(regioni_geo_casi_totali@data$totale_casi)
regioni_geo_deceduti@data$deceduti<-as.character(regioni_geo_deceduti@data$deceduti)
regioni_geo_guariti@data$dimessi_guariti<-as.character(regioni_geo_guariti@data$dimessi_guariti)
regioni_geo_positivi@data$totale_attualmente_positivi<-as.character(regioni_geo_positivi@data$totale_attualmente_positivi)
### export in formato geojson js per caricamento in leaflet ###
writeOGR(regioni_geo_casi_totali, "webmap/dati/casi_totali.js", layer="regioni_geo_casi_totali", driver="GeoJSON", overwrite_layer = T)
